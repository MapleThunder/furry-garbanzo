### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BatchPayload {
  count: Int!
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input IntFieldUpdateOperationsInput {
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

type Item {
  createdAt: DateTime!
  description: String!
  id: Int!
  image: String
  largeImage: String
  price: Int!
  title: String!
  updatedAt: DateTime!
}

input ItemCreateInput {
  createdAt: DateTime!
  description: String!
  image: String
  largeImage: String
  price: Int!
  title: String!
  updatedAt: DateTime!
}

input ItemUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  largeImage: NullableStringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  largeImage: NullableStringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input ItemWhereInput {
  AND: [ItemWhereInput]
  createdAt: DateTimeFilter
  description: StringFilter
  id: IntFilter
  image: StringNullableFilter
  largeImage: StringNullableFilter
  NOT: [ItemWhereInput]
  OR: [ItemWhereInput]
  price: IntFilter
  title: StringFilter
  updatedAt: DateTimeFilter
}

input ItemWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneItem(data: ItemCreateInput!): Item!
  createOneUser(data: UserCreateInput!): User!
  deleteManyItem(where: ItemWhereInput): BatchPayload!
  deleteManyUser(where: UserWhereInput): BatchPayload!
  deleteOneItem(where: ItemWhereUniqueInput!): Item
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateManyItem(data: ItemUpdateManyMutationInput!, where: ItemWhereInput): BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateOneItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  upsertOneItem(create: ItemCreateInput!, update: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Query {
  item(where: ItemWhereUniqueInput!): Item
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

type User {
  email: String!
  id: Int!
  name: String!
}

input UserCreateInput {
  email: String!
  name: String!
}

input UserUpdateInput {
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
}

input UserWhereInput {
  AND: [UserWhereInput]
  email: StringFilter
  id: IntFilter
  name: StringFilter
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
