### This file was generated by Nexus Schema
### Do not make changes to this file directly


type BatchPayload {
  count: Int!
}

input FloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input IntFieldUpdateOperationsInput {
  set: Int
}

input IntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

type Item {
  description: String!
  id: Int!
  image: String
  largeImage: String
  price: Int!
  title: String!
  user: User!
  userId: Int!
}

input ItemCreateInput {
  description: String!
  image: String
  largeImage: String
  price: Int!
  title: String!
  user: UserCreateOneWithoutItemInput!
}

input ItemCreateManyWithoutUserInput {
  connect: [ItemWhereUniqueInput]
  create: [ItemCreateWithoutUserInput]
}

input ItemCreateWithoutUserInput {
  description: String!
  image: String
  largeImage: String
  price: Int!
  title: String!
}

input ItemListRelationFilter {
  every: ItemWhereInput
  none: ItemWhereInput
  some: ItemWhereInput
}

input ItemScalarWhereInput {
  AND: [ItemScalarWhereInput]
  description: StringFilter
  id: IntFilter
  image: StringNullableFilter
  largeImage: StringNullableFilter
  NOT: [ItemScalarWhereInput]
  OR: [ItemScalarWhereInput]
  price: IntFilter
  title: StringFilter
  userId: IntFilter
}

input ItemUpdateInput {
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  largeImage: NullableStringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  user: UserUpdateOneRequiredWithoutItemInput
}

input ItemUpdateManyDataInput {
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  largeImage: NullableStringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input ItemUpdateManyMutationInput {
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  largeImage: NullableStringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input ItemUpdateManyWithoutUserInput {
  connect: [ItemWhereUniqueInput]
  create: [ItemCreateWithoutUserInput]
  delete: [ItemWhereUniqueInput]
  deleteMany: [ItemScalarWhereInput]
  disconnect: [ItemWhereUniqueInput]
  set: [ItemWhereUniqueInput]
  update: [ItemUpdateWithWhereUniqueWithoutUserInput]
  updateMany: [ItemUpdateManyWithWhereNestedInput]
  upsert: [ItemUpsertWithWhereUniqueWithoutUserInput]
}

input ItemUpdateManyWithWhereNestedInput {
  data: ItemUpdateManyDataInput!
  where: ItemScalarWhereInput!
}

input ItemUpdateWithoutUserDataInput {
  description: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  largeImage: NullableStringFieldUpdateOperationsInput
  price: IntFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
}

input ItemUpdateWithWhereUniqueWithoutUserInput {
  data: ItemUpdateWithoutUserDataInput!
  where: ItemWhereUniqueInput!
}

input ItemUpsertWithWhereUniqueWithoutUserInput {
  create: ItemCreateWithoutUserInput!
  update: ItemUpdateWithoutUserDataInput!
  where: ItemWhereUniqueInput!
}

input ItemWhereInput {
  AND: [ItemWhereInput]
  description: StringFilter
  id: IntFilter
  image: StringNullableFilter
  largeImage: StringNullableFilter
  NOT: [ItemWhereInput]
  OR: [ItemWhereInput]
  price: IntFilter
  title: StringFilter
  user: UserWhereInput
  userId: IntFilter
}

input ItemWhereUniqueInput {
  id: Int
}

type Mutation {
  createOneItem(data: ItemCreateInput!): Item!
  createOneUser(data: UserCreateInput!): User!
  deleteManyItem(where: ItemWhereInput): BatchPayload!
  deleteManyUser(where: UserWhereInput): BatchPayload!
  deleteOneItem(where: ItemWhereUniqueInput!): Item
  deleteOneUser(where: UserWhereUniqueInput!): User
  updateManyItem(data: ItemUpdateManyMutationInput!, where: ItemWhereInput): BatchPayload!
  updateManyUser(data: UserUpdateManyMutationInput!, where: UserWhereInput): BatchPayload!
  updateOneItem(data: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item
  updateOneUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  upsertOneItem(create: ItemCreateInput!, update: ItemUpdateInput!, where: ItemWhereUniqueInput!): Item!
  upsertOneUser(create: UserCreateInput!, update: UserUpdateInput!, where: UserWhereUniqueInput!): User!
}

input NestedFloatNullableFilter {
  equals: Float
  gt: Float
  gte: Float
  in: [Float]
  lt: Float
  lte: Float
  not: NestedFloatNullableFilter
  notIn: [Float]
}

input NestedIntFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int]
  lt: Int
  lte: Int
  not: NestedIntFilter
  notIn: [Int]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

input NullableFloatFieldUpdateOperationsInput {
  set: Float
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

enum Permission {
  ADMIN
  ITEM_CREATE
  ITEM_DELETE
  ITEM_UPDATE
  PERMISSION_UPDATE
  USER
}

type Query {
  item(where: ItemWhereUniqueInput!): Item
  items(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String]
  startsWith: String
}

type User {
  email: String!
  id: Int!
  Item(after: ItemWhereUniqueInput, before: ItemWhereUniqueInput, first: Int, last: Int): [Item!]!
  name: String!
  password: String!
  permissions: [Permission!]!
  resetToken: String
  resetTokenExpiry: Float
}

input UserCreateInput {
  email: String!
  Item: ItemCreateManyWithoutUserInput
  name: String!
  password: String!
  permissions: UserCreatepermissionsInput
  resetToken: String
  resetTokenExpiry: Float
}

input UserCreateOneWithoutItemInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemInput
}

input UserCreatepermissionsInput {
  set: [Permission]
}

input UserCreateWithoutItemInput {
  email: String!
  name: String!
  password: String!
  permissions: UserCreatepermissionsInput
  resetToken: String
  resetTokenExpiry: Float
}

input UserUpdateInput {
  email: StringFieldUpdateOperationsInput
  Item: ItemUpdateManyWithoutUserInput
  name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: UserUpdatepermissionsInput
  resetToken: NullableStringFieldUpdateOperationsInput
  resetTokenExpiry: NullableFloatFieldUpdateOperationsInput
}

input UserUpdateManyMutationInput {
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: UserUpdatepermissionsInput
  resetToken: NullableStringFieldUpdateOperationsInput
  resetTokenExpiry: NullableFloatFieldUpdateOperationsInput
}

input UserUpdateOneRequiredWithoutItemInput {
  connect: UserWhereUniqueInput
  create: UserCreateWithoutItemInput
  update: UserUpdateWithoutItemDataInput
  upsert: UserUpsertWithoutItemInput
}

input UserUpdatepermissionsInput {
  set: [Permission]
}

input UserUpdateWithoutItemDataInput {
  email: StringFieldUpdateOperationsInput
  name: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  permissions: UserUpdatepermissionsInput
  resetToken: NullableStringFieldUpdateOperationsInput
  resetTokenExpiry: NullableFloatFieldUpdateOperationsInput
}

input UserUpsertWithoutItemInput {
  create: UserCreateWithoutItemInput!
  update: UserUpdateWithoutItemDataInput!
}

input UserWhereInput {
  AND: [UserWhereInput]
  email: StringFilter
  id: IntFilter
  Item: ItemListRelationFilter
  name: StringFilter
  NOT: [UserWhereInput]
  OR: [UserWhereInput]
  password: StringFilter
  permissions: [Permission]
  resetToken: StringNullableFilter
  resetTokenExpiry: FloatNullableFilter
}

input UserWhereUniqueInput {
  email: String
  id: Int
}
